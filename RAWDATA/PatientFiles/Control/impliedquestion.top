###### THIS FILE SHOULD GENERATE NO USER OUTPUT

topic: ~xpreprocess system ()
u: (< \[) END(TOPIC)
u: () ^respond(~xquestion)



topic: ~XQUESTION system repeat nosamples ()

u: (< \[ ) end(TOPIC) # no oob


s: QUESTION (!~interjections) if (%length == 0) {END(TOPIC)}
	^refine()		# determine question/command type

	a: (\!) # leave ! and dont set question if not already set

	#! never can I go home
	a: ( < *~1 ~negative_adverb_starter ~auxverblist ) RemoveTokenFlags(#questionmark) # stay a statement

	#  inversion with negative adverbials

	# "only then" "only after" "only when"
	a: ( < only [then after when] ) RemoveTokenFlags(#questionmark)

	#  so + adjective + be  "so strange was" "so difficult is"
	a: ( < so ~adjective be ) RemoveTokenFlags(#questionmark)

	# Under no circumstances
	a: (< under no [condition circumstance] ~auxverblist ) RemoveTokenFlags(#questionmark)

	# only by
	a: (< only by * ~auxverblist ) RemoveTokenFlags(#questionmark)

	# such is
	a: (< [so such] be ) RemoveTokenFlags(#questionmark)

	#! blessed are
	a: ( < [gone blessed] be ) RemoveTokenFlags(#questionmark)

	# at no time
	a: (< at no time ~auxverblist ) RemoveTokenFlags(#questionmark)

	# omittied "if"  Had he understood the problem, he wouldn't have committed those mistakes.
	# Should he decide to come, please telephone.
	a: ( < [should were had]  * , ) RemoveTokenFlags(#questionmark)

	#! What a beautiful day
	a: (< what ~determiner  )  # remains a statement

	#! be dark
	a: (< ['be 'let] !you ) RemoveTokenFlags(#questionmark) # a command

	# which side is better
	a: ( < ~qwords) SetTokenFlags(#QUESTIONMARK)

	# of a cat and a pigeon , which is better
	a: ( , [which what] [~verb ~aux_verb]) SetTokenFlags(#QUESTIONMARK)

	#! guess how old I am
	a: ( < guess ~qwords ) SetTokenFlags(#QUESTIONMARK)

	#! Perhaps you can tell us
	a: ( < *1 you [could would can] ~tell ) SetTokenFlags(#QUESTIONMARK)

	#! would you eat
	a: ( < ~aux_verb [~pronoun_bits ~noun]) SetTokenFlags(#QUESTIONMARK)

	#!!P if I died would you care
	a: ( < if * [~qwords would could should will ]) SetTokenFlags(#QUESTIONMARK)

	#! where
	a: (< ~qwords *~2 >) SetTokenFlags(#QUESTIONMARK)

	#!  on a scale from 1 to 10 how old are you
	a: ( scale from * [how rate]) SetTokenFlags(#QUESTIONMARK)

	#! how are you
	a: (~emohowzit) SetTokenFlags(#QUESTIONMARK)

	#! What are birds
	#! What kind of man are you
	a: (<  ~qwords !to * [~auxverblist ~mainverb] * ~mainsubject) SetTokenFlags(#QUESTIONMARK)

	#! Have you seen a poem
	#! Would the man go home soon
	a: (!to <  ~auxverblist * ~mainsubject ) SetTokenFlags(#QUESTIONMARK)

	#! solve for a
	a: (< solve ) SetTokenFlags(#QUESTIONMARK)

	#! what famous person would you like to meet
	a: (<  ~qwords *~3  [~auxverblist ~verb] ) SetTokenFlags(#QUESTIONMARK)

	#!!P please Tell me about birds
	a: (!'I < *~1 [~describe ~list ~explain define  ~explain tell define suggest recommend] %tokenflags&#COMMANDMARK) SetTokenFlags(#QUESTIONMARK)

	#! name a poet
	a: ( !my < *~1 name [a some ~number]) SetTokenFlags(#QUESTIONMARK)

	#! French is the language of what country
	a: ( ~preposition what ~noun ) SetTokenFlags(#QUESTIONMARK)

	#! Joan is married to whom
	a: (~preposition whom > ) SetTokenFlags(#QUESTIONMARK)

	#! John was born when
	a: ( [where when how why what] > ) SetTokenFlags(#QUESTIONMARK)

	#!!B Tell me about sex
	a: COMMANDED (!assume %tokenflags&#COMMANDMARK [~classify ~tell guess list ] ) ^SetTokenFlags(#QUESTIONMARK)  # treat command as a question

	#! the moon is what shape?
	a: ( * be ~qwords *1 > ) ^SetTokenFlags(#QUESTIONMARK)

	#! Ever taken medication?
	a: (!since < ever) ^SetTokenFlags(#QUESTIONMARK) # I added this to Bruce's impliedquestion list - probably only good for us

	#! Anyone taken medication?
	#! Any breast changes?
		a: (< [any anyone] *) ^SetTokenFlags(#QUESTIONMARK) # I added this to Bruce's impliedquestion list - probably only good for us

	a: (< and *) ^SetTokenFlags(#QUESTIONMARK) # and do they have any illness? starting sentence with and makes it a statemtent.
